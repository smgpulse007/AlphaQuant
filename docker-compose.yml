version: "3.9"
services:
  api:
    build: { context: ., dockerfile: docker/api.Dockerfile }
    env_file: [.env]
    ports: ["8000:8000"]
    depends_on: [redis, postgres, qdrant, minio, ollama]
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]

  worker:
    build: { context: ., dockerfile: docker/worker.Dockerfile }
    env_file: [.env]
    depends_on: [redis, postgres, qdrant, minio, ollama]

  ollama:
    image: ollama/ollama:latest
    volumes: ["ollama:/root/.ollama"]
    # Internal-only; remove host port to avoid conflicts

  playwright:
    build: { context: ., dockerfile: docker/playwright.Dockerfile }
    shm_size: 2gb

  redis:
    image: redis:7-alpine

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: alpha
    volumes: ["pg:/var/lib/postgresql/data"]

  qdrant:
    image: qdrant/qdrant:latest
    ports: ["6333:6333"]
    volumes: ["qdrant:/qdrant/storage"]

  opensearch:
    image: opensearchproject/opensearch:2
    environment:
      discovery.type: single-node
      DISABLE_SECURITY_PLUGIN: "true"
    ports: ["9200:9200"]
    volumes: ["os:/usr/share/opensearch/data"]

  minio:
    image: minio/minio:latest
    command: server /data --console-address :9001
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports: ["9000:9000", "9001:9001"]
    volumes: ["minio:/data"]

volumes: { pg: {}, qdrant: {}, os: {}, minio: {}, ollama: {} }
